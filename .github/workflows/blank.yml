name: Run OrangeTesting Schedule

on:
  workflow_dispatch:  # permite executar manualmente
  push:
    branches: [ main ]

jobs:
  run-tests:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Login na API e obter token
        id: login
        run: |
          TOKEN=$(curl -s --location 'https://app.orangetesting.com:5001/api/users/login' \
            --header 'Content-Type: application/json' \
            --data-raw "{\"email\": \"claudinei@companyhero.com\", \"password\": \"testehero4321!\"}" \
            | jq -r '.token')

          if [ "$TOKEN" == "null" ] || [ -z "$TOKEN" ]; then
            echo "Erro: não foi possível obter o token!"
            exit 1
          fi

          echo "token=$TOKEN" >> $GITHUB_OUTPUT

      - name: Criar agendamento
        id: schedule
        run: |
          RESPONSE=$(curl -s --location 'https://app.orangetesting.com:5001/api/schedules' \
            --header "Authorization: Bearer ${{ steps.login.outputs.token }}" \
            --header 'Content-Type: application/json' \
            --data '{
              "name": "Smoke Test CI",
              "url": "https://rh-hero-git-dev-companyhero.vercel.app/",
              "product": "Hero",
              "modules": ["PoC"],
              "qualityGates": ["Smoke Test"],
              "useInsertionOrder": true
            }')

          echo "Resposta do agendamento: $RESPONSE"
          ID=$(echo "$RESPONSE" | jq -r '.id // .scheduleId // .data.id // .idSchedule')

          if [ "$ID" == "null" ] || [ -z "$ID" ]; then
            echo "Erro: não foi possível obter o ID do agendamento!"
            exit 1
          fi

          echo "schedule_id=$ID" >> $GITHUB_OUTPUT

      - name: Esperar execução (delay)
        run: sleep 60

      - name: Verificar resultado do agendamento
        run: |
         echo "Verificando resultado do agendamento ${{ steps.schedule.outputs.schedule_id }} ..."

         ATTEMPTS=0
         MAX_ATTEMPTS=10
         DELAY=30

         while [ $ATTEMPTS -lt $MAX_ATTEMPTS ]; do
           RESPONSE=$(curl -s --location "https://app.orangetesting.com:5001/api/schedules/${{ steps.schedule.outputs.schedule_id }}/result" \
             --header "Authorization: Bearer ${{ steps.login.outputs.token }}")

           echo "Resposta da API:"
           echo "$RESPONSE"

           RESULT=$(echo "$RESPONSE" | jq -r '.result // .data.result')

           echo "Resultado atual: $RESULT"

           if [ "$RESULT" == "pass" ]; then
              echo "✅ Teste passou!"
              exit 0
           elif [ "$RESULT" == "fail" ]; then
              echo "❌ Teste falhou!"
              exit 1
           else
              echo "⏳ Ainda processando... (tentativa $((ATTEMPTS+1))/$MAX_ATTEMPTS)"
              ATTEMPTS=$((ATTEMPTS+1))
              sleep $DELAY
          fi
         done

         echo "⚠️ Tempo limite atingido sem resultado final."
         exit 1
